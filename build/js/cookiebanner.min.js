/*
 *  cookiebannerjs - v0.1.0
 *  2018-05-16
 *
 *  https://github.com/interpromotion/cookiebannerjs
 */

/*
 *  Copyright (C) 2018 Interpromotion <info@interpromotion.com>
 *
 *  This file is part of Cookiebannerjs.
 *
 *  Cookiebannerjs is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Affero General Public License as
 *  published by the Free Software Foundation, either version 3 of the
 *  License, or (at your option) any later version.
 *
 *  Cookiebannerjs is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Affero General Public License for more details.
 *
 *  You should have received a copy of the GNU Affero General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>
 */


!function(t,o,e){"use strict";"function"==typeof define&&define.amd?define(t):o.CookieBanner=t()}(function(){"use strict";var o={getCookie:function(t){var o=("; "+document.cookie).split("; "+t+"=");return 2!=o.length?void 0:o.pop().split(";").shift()},setCookie:function(t,o,e,n,i){var s=new Date;s.setDate(s.getDate()+(e||365));var l=[t+"="+o,"expires="+s.toUTCString(),"path="+(i||"/")];n&&l.push("domain="+n),document.cookie=l.join(";")},isCookieSet:function(t){return void 0!==this.getCookie(t)}};function t(t){(self=this).banner=null,this.allowButton=null,this.disallowButton=null,this.allowCookieValue="allow",this.denyCookieValue="deny";this.options=function(t,o){for(var e in o)o.hasOwnProperty(e)&&(t[e]=o[e]);return t}({policyText:"",policyUrl:"",policyUrlText:"",allowText:"Allow cookie",denyText:"Deny cookie",cookieName:"cookie_allowed",bannerClass:"intP_cookie-banner",bannerHiddenClass:"intP_cookie-banner__close",policyTextClass:"intP_cookie-banner_policy-text",allowButtonClass:"intP_cookie-banner_allow",denyButtonClass:"intP_cookie-banner_deny",closingAnimationDuration:500,onInitialized:function(){},onStatusChanged:function(t){}},t),o.isCookieSet(this.options.cookieName)||this._draw(),this.options.onInitialized()}return t.prototype._draw=function(){this.banner=document.createElement("div"),this.banner.classList.add(this.options.bannerClass);var t=document.createElement("p");t.classList.add(this.options.policyTextClass);var o="";o=0<=this.options.policyText.indexOf("{{policy_url}}")?this.options.policyText.replace("{{policy_url}}",'<a href="'+this.options.policyUrl+'">'+this.options.policyUrlText+"</a>"):this.options.policyText+("."==this.options.policyText.charAt(this.options.policyText.length-1)?" ":". ")+'<a href="'+this.options.policyUrl+'">'+this.options.policyUrlText+"</a>",t.innerHTML=o,this.banner.appendChild(t);var e=document.createElement("div");e.classList.add("intP_cookie-banner_buttons"),this.banner.appendChild(e),this.allowButton=document.createElement("button"),this.allowButton.classList.add(this.options.allowButtonClass),this.allowButton.setAttribute("type","button"),this.allowButton.innerHTML=this.options.allowText,this.allowButton.addEventListener("click",this.allow),e.appendChild(this.allowButton),this.denyButton=document.createElement("button"),this.denyButton.classList.add(this.options.denyButtonClass),this.denyButton.setAttribute("type","button"),this.denyButton.innerHTML=this.options.denyText,this.denyButton.addEventListener("click",this.deny),e.appendChild(this.denyButton),document.body.appendChild(this.banner)},t.prototype.allow=function(){self.setStatus(self.allowCookieValue)},t.prototype.deny=function(){self.setStatus(self.denyCookieValue)},t.prototype.setStatus=function(t){t!=self.allowCookieValue&&t!=self.denyCookieValue||(o.setCookie(self.options.cookieName,t,365,"","/"),self.options.onStatusChanged(t),self.banner&&(self.banner.classList.add(self.options.bannerHiddenClass),setTimeout(function(){self.banner.remove()},self.options.closingAnimationDuration)))},t.hasConsent=function(){return o.getCookie(self.options.cookieName)===self.allowCookieValue},t.changeStatus=function(t){!0===t?this.prototype.setStatus(self.allowCookieValue):this.prototype.setStatus(self.denyCookieValue)},window.CookieBanner=t,window.CookieBanner},window,document);